<!DOCTYPE html>
<html>
   <head>
     <meta charset="utf-8">
     <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
     <link rel="icon" type="image/png" href="https://www.goodfreephotos.com/albums/vector-images/two-cards-vector-file.png" />
     <script src = "/socket.io/socket.io.js"></script>
     <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
     <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
     <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
     <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>
     <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
     <title>🂠 Virtual Deck - Play Anywhere with Anyone</title>
      <style>
        .jumbotron-fluid{
          background-color: white;
        }
        #main{
          height: 80vh;
          padding: 20px 10%;
        }
        #mainrow{
          height: 100%;
          width: 100%;
        }
        .col-4{
          height: 100%;
        }
        #playArea{
          box-shadow: 1px 1px 5px 1px #888888;
          height: 100%;
          padding: 20px 20px;
        }
        .get_deck{
          font-size: 30px;
        }
        h1{
          color: grey;
        }
        .startText{
          color:black;
          text-align: center;
        }
        .col-7{
          height: 100%;
          margin-left: 30px;
        }
        .col-7 > .row {
          padding: 20px;
          height: 47%;
          box-shadow: 1px 1px 5px 1px #888888;
        }
        #myCards{
          margin-top: 30px;
        }
        .deckDesc{
          font-size: 3em;
          padding-top: 20px;
          color: black;
          text-align: center;
        }
        .col-form-label{
          font-size: 20px;
        }
        span{
          font-size: 15em;
          line-height: 100%;
          margin-left: 23%;
        }
        .distrib-btn {
          margin-left: 25%;
          margin-top: 10px;
        }
        #cardDisplay{
          font-size: 7em;
        }
        .card{
          display: inline-block;
          border: none;
          background-color: transparent;
        }
        .cardinPile{
          font-size: 15em;
          background-color: white;
          display: inline-block;
          line-height: 100%;
        }
      </style>
   </head>
   <script>
      var rank = ['A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K'];
      var suit = ['Clubs', 'Diamonds', 'Hearts', 'Spades'];
      var unicode = [ ['🃑', '🃒', '🃓', '🃔', '🃕', '🃖', '🃗', '🃘', '🃙', '🃚', '🃛', '🃝', '🃞'],  //  Clubs (trefle)
                      ['🃁', '🃂', '🃃', '🃄', '🃅', '🃆', '🃇', '🃈', '🃉', '🃊', '🃋', '🃍', '🃎'],  //  Diamonds (carreau)
                      ['🂱', '🂲', '🂳', '🂴', '🂵', '🂶', '🂷', '🂸', '🂹', '🂺', '🂻', '🂽', '🂾'],  //  Hearts (coeur)
                      ['🂡', '🂢', '🂣', '🂤', '🂥', '🂦', '🂧', '🂨', '🂩', '🂪', '🂫', '🂭', '🂮']]; // Spades (pique)
      var deck = [];
      var piles = [[]];
      var my_deck = [];
      var socket = io();
      var users = [];
      var withCavaliers = 0;

      socket.emit('connectRoom', '<%= data %>');

      window.onbeforeunload = function(event) {
            event.returnValue = "Refreshing the page will make you disconnect from the game!";
        }


      socket.on('connectToRoom', function(data){
        users = data
        $('#numPlayers').text('Players: ' + users.length);
      });

      socket.on('giveDeck', function(data){
        deck = data;
        $("#mainDeck").empty();
        var title = "<h1>Main Deck</h1>";
        if(deck.length) {
          var col1 = "<div class = 'col-6'><h1>Main Deck: "+deck.length+"</h1><br>";
          if((withCavaliers == 1 && deck.length==56) || (withCavaliers == 0 && deck.length == 52)) {
            col1 += "<button onclick = 'shuffleDeck()' class = 'btn btn-outline-dark btn-lg btn-block'>Shuffle Cards</button><br>"
          } else {
            col1 += "<button onclick = 'reclaimCards()' class = 'btn btn-outline-dark btn-lg btn-block'>Reclaim Cards</button><br>"
          }
          
          col1 += "<button class = 'btn btn-outline-dark btn-lg btn-block' onclick = 'takeOne()'>Take 1 Card</button><br>"
          col1 += '<div class="control-group form-inline">'
            col1 += '<label class="mb-2" for="distribute_card">Distribute for each player</label>'
            col1 += '<input class= "mb-2" type = "number" id = "distribute_card" placeholder = "number of cards" disabled>'
            col1 += '<div class="mx-sm-3 mb-2"> Or </div>'
            col1 += '<label class="form-check-label mb-2" for="all_cards">All cards</label>'
            col1 += "<input type='checkbox' class='form-check-input mb-2' id='all_cards' checked onclick='disableCardNumbers()'>"
          col1 += "</div>"

            
          var col2 = "<div class = 'col-6' ><span>🂠</span>"
          col2 += "<button class='col-6 distrib-btn btn btn-primary ' onclick = 'distribute()'>Distribute</button>"
          col2 += '</div>'
        } else {
          var col1 = "<div class = 'col-6'><h1>Deck is empty</h1>";
          col1 += "<button onclick = 'reclaimCards()' class = 'btn btn-outline-dark btn-lg btn-block'>Reclaim Cards</button><br></div>"
          var col2 = "<div class = 'col-6'><span>∅</span></div>"
        }
        
        // col1 += "<button class = 'btn btn-outline-dark btn-lg btn-block' onclick = 'takeOne()'>Take 1 Card</button><br>"
        $("#mainDeck").append(col1);
        $("#mainDeck").append(col2);
      })

      socket.on('getCards', function(data){
        my_deck = data;
        drawCards();
      })

      socket.on('areaCleared', function() {
        console.log("Clearing area ...");
        $("#playArea").empty()
        var content = "<h1>Playing Area</h1>";
        var content = content +  "<button class = 'btn btn-outline-dark btn-lg btn-block get_deck' onclick = 'clearPlayingArea()''>Clear</button>"
        $("#playArea").append(content)
      })

      socket.on('movedCard', function(data){
        piles = data['pile'];
        card = data['card']
        if(card != undefined){
          console.log("Drawing a card from the pile")
          drawCardsinPile(card);
        } else {
          console.log("Card already draw from the pile")
        }
      })

      socket.on('addedPile', function(data){
        piles = data;
        console.log(piles);
      })
   </script>
   <body>
     <div class = "jumbotron jumbotron-fluid">
       <div id = "main" class = "container-fluid">
         <div id = "mainrow" class = "row">
           <div id = "playArea" class = "col-4">
             <h1>Playing Area</h1>
             <button class = "btn btn-outline-dark btn-lg btn-block get_deck" onclick = "clearPlayingArea()">Clear</button>
           </div>
           <div class = "col-7">
             <div id = "mainDeck" class = "row">
               <div class = "col-6 form-group">
                 <h1 class = "startText">Everyone in? </h1><br><br>
                 <button class = "btn btn-outline-dark btn-lg btn-block get_deck" onclick = "start()">Start</button>
                 <br/>
                 <input type='checkbox' class='form-check-input' id='with_cavalier'>
                 <label class="form-check-label" for="with_cavalier">With cavaliers ? </label>
               </div>
               <div class = "col-6">
                 <h1 class = "deckDesc">Room <%= data %></h1>
                 <h1 id = "numPlayers" class = "deckDesc">Players: 1</h1>
               </div>
             </div>
             <div id = "myCards" class = "row">
               <div class = "col-10">
                 <h1>Your Cards</h1>
                 <div id = "cardDisplay"></div>
               </div>
             </div>
           </div>
         </div>
       </div>
     </div>
   </body>
   <script>

     function start(){
      if ($('#with_cavalier').is(':checked')) {
        getDeckWithCavaliers()
      } else {
        getDeck()
      }
     }

      function getDeckWithCavaliers() {
        withCavaliers = 1
        rank = ['A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'C', 'Q', 'K'];
        unicode = [ ['🃑', '🃒', '🃓', '🃔', '🃕', '🃖', '🃗', '🃘', '🃙', '🃚', '🃛','🃜','🃝', '🃞'],     //  Clubs (trefle)
                      ['🃁', '🃂', '🃃', '🃄', '🃅', '🃆', '🃇', '🃈', '🃉', '🃊', '🃋','🃌', '🃍', '🃎'],  //  Diamonds (carreau)
                      ['🂱', '🂲', '🂳', '🂴', '🂵', '🂶', '🂷', '🂸', '🂹', '🂺', '🂻','🂼', '🂽', '🂾'],  //  Hearts (coeur)
                      ['🂡', '🂢', '🂣', '🂤', '🂥', '🂦', '🂧', '🂨', '🂩', '🂪', '🂫','🂬', '🂭', '🂮']];     // Spades (pique)
        socket.emit('getDeck', {'room' : '<%= data %>', 'withCavaliers' : '1'});
      }
      function getDeck() {
        withCavaliers = 0
        socket.emit('getDeck', {'room' : '<%= data %>', 'withCavaliers' : '0'});
      }

      function clearPlayingArea() {
        data = {"room" : "<%= data %>"}
        socket.emit('clearPlayingArea', data);
      }

      function shuffleDeck() {
        data = {"room" : "<%= data %>", "deck" : deck}
        socket.emit('shuffleDeck', data);
      }

      function reclaimCards() {
        data = {'room' : '<%= data %>', 'withCavaliers' : withCavaliers}
        socket.emit('reclaimCards', data);
      }

      function addPile() {
        data = {"room" : "<%= data %>", "pile" : piles};
        socket.emit('addPile', data);
      }

      function takeOne(){
        data = [{"room" : "<%= data %>", "numCards" : 1, "deck" : deck, "mycards" : my_deck, "user" : socket.id}];
        socket.emit('takeCards', data);
      }

      function drawCards(){
        $("#cardDisplay").empty();
        $("#cardDisplay").sortable({
            start: function(event, ui) {
              ui.item.data('originIndex', ui.item.index());
            },
            change: function (event, ui) { 
                var originIndex = ui.item.data('originIndex');
                var currentIndex = ui.placeholder.index();
                ui.item.data('swapIndex', currentIndex); 
              },
              stop: function (event, ui) { 
                console.log("From >> ")
                var originIndex = ui.item.data('originIndex')
                var swapIndex = ui.item.data('swapIndex')
                var originElement = my_deck[originIndex]
                
                console.log("Raw from: "+ originIndex)
                console.log("Raw to: "+swapIndex)

                if (originIndex < swapIndex) {
                  swapIndex -= 1
                  if(swapIndex < 0)
                    swapIndex = 0
                } 
                my_deck.splice(originIndex, 1);
                my_deck.splice(swapIndex, 0, originElement);
                
              }
        });

        for(var i = 0; i < my_deck.length; i++) {
          card = my_deck[i]
          console.log(unicode[suit.indexOf(card['suit'])][rank.indexOf(card['rank'])]);
          var $item = $('<div class="card"/>').text(unicode[suit.indexOf(card['suit'])][rank.indexOf(card['rank'])]);
          if(card['suit'] == "Hearts" || card['suit'] == "Diamonds" ) {
            $item.css({ 'color': 'red'});
          } else {
            $item.css({'position' : 'relative'});
          }
          $("#cardDisplay").append($item);
        }
      }

      function drawCardsinPile(card) {
        console.log(unicode[suit.indexOf(card['suit'])][rank.indexOf(card['rank'])]);
        var $item = $('<div class="cardinPile"/>').text(unicode[suit.indexOf(card['suit'])][rank.indexOf(card['rank'])]);
        if(card['suit'] == "Hearts" || card['suit'] == "Diamonds" ) {
          $item.css({
          'position' : 'relative',
          'color': 'red'
          });
        } else {
          $item.css({'position' : 'relative'});
        }
        
        $("#playArea").append($item);
      }

      function distribute() {
        var numCards = $('#distribute_card').val()
        if ($('#all_cards').is(':checked')) {
          numCards = -1          
        } 
        console.log("Num card: "+numCards)
        console.log($('#all_cards').is(':checked'))
        data = [{"room" : "<%= data %>", "numCards" : numCards, "deck" : deck, "mycards" : my_deck, "users" : users}];
        socket.emit('distribute', data);
      }


      // Move card from you deck to the pile
      $('body').on('click', '.card', function() {
        var cardIndex = $(".card").index($(this))
        var card = my_deck[cardIndex]
        console.log("Click on your card on "+card)

        my_deck.splice(cardIndex, 1);
        $(".card:eq(" + cardIndex +")").remove();

        data = {"room" : "<%= data %>", "card" : card, "pile" : piles };
        socket.emit('moveCard', data);
      })


      // Move card from the pile to your deck
      $('body').on('click', '.cardinPile', function() {
        var card = piles[0][$(".cardinPile").index($(this))]

        console.log("Click on the pile card on ")
        console.log(card)
      })

      function disableCardNumbers() {
        if ($('#all_cards').is(':checked')) {
          $('#distribute_card').prop("disabled", true);
        } else {
          $('#distribute_card').prop("disabled", false);
        }
      }

      $(document).on('keypress', function(event) {
      var keycode = (event.keyCode ? event.keyCode : event.which);
      if (keycode == '13') {
        distribute()
      }
    });

   </script>
</html>
